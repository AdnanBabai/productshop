{"version":3,"sources":["components/Header.js","actions/productsActions.js","components/eModal.js","components/rModal.js","components/Content.js","components/New_Product.js","reducers/products_reducers.js","redux.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","reactstrap_es","className","light","expand","style","fontSize","Component","newProductAction","newProduct","type","payload","removeProductAction","index","editProductAction","editedProduct","name","EditModal","sendData","eproduct","_this","refs","pname","value","price","pprice","categary","pcategary","description","pdescription","time","props","products","mproduct","id","dispatch","_this2","this","isOpen","editingModel","fontWeight","textAlign","marginTop","defaultValue","ref","border","color","onClick","toggle","React","connect","store","productsReducer","ReadModal","readModel","borderless","Content","state","removeProduct","editProductIndex","setState","eModal","etoggle","bind","rModal","rtoggle","Link","to","responsive","boxShadow","backgroundColor","display","productItems","length","colSpan","map","item","key","scope","fa","Product","Object","classCallCheck","New_Product","getProductData","e","preventDefault","pName","pPrice","pCategary","pDescription","now","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Math","floor","random","nameRegex","RegExp","priceRegex","catRegex","desRegex","test","alert","clearInputs","for","width","margin","autoFocus","data","arguments","undefined","action","newState","objectSpread","push","console","log","filter","product","allReducers","combineReducers","persistConfig","storage","persistedReducer","persistReducer","createStore","src_redux","persistor","persistStore","App","es","config","integration_react","loading","BrowserRouter","components_Header","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b68bf2b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand } from \"reactstrap\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar className=\"header\" light expand=\"md\">\r\n          <NavbarBrand style={{fontSize: 25 }}> Product Shop </NavbarBrand>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","\r\n\r\nconst newProductAction = ( newProduct ) => {\r\n  return { type: \"ADD_PRODUCT\", payload: newProduct };\r\n};\r\n\r\nconst removeProductAction = ( index ) => {\r\n  return { type: 'REMOVE_PRODUCT', payload: index }\r\n}\r\n\r\nconst editProductAction = index => {\r\n  return { type: 'EDIT_PRODUCT', payload: index}\r\n}\r\n\r\nconst editedProduct = name => {\r\n  return { type: 'EDITED_PRODUCT', payload: name }\r\n}\r\nexport { newProductAction, removeProductAction, editProductAction, editedProduct } \r\n","import React from \"react\";\r\nimport { Button, Modal, h4, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, FormGroup, Col, Label } from \"reactstrap\";\r\nimport { editedProduct } from \"../actions/productsActions\";\r\n\r\nclass EditModal extends React.Component {\r\n\r\n  sendData = () => {\r\n    let name = this.refs.pname.value;\r\n    let price = this.refs.pprice.value;\r\n    let categary = this.refs.pcategary.value;\r\n    let description = this.refs.pdescription.value;\r\n    let time = this.props.products.mproduct.time;\r\n    let id = this.props.products.mproduct.id;\r\n    let eproduct = {\r\n      name,\r\n      price,\r\n      categary,\r\n      description,\r\n      time,\r\n      id\r\n    };\r\n    this.props.dispatch(editedProduct(eproduct));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.props.editingModel} >\r\n          <h4 style={{ fontWeight: 300, textAlign: 'center', marginTop: 25 }}>Product Details</h4>\r\n\r\n          <ModalBody>\r\n            <Form >\r\n              <FormGroup>\r\n                <Col style={{ fontSize: 17, fontWeight: 500 }}>Name</Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.props.products.mproduct.name}\r\n                    ref=\"pname\"\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Col>\r\n                  <Label style={{ fontSize: 17, fontWeight: 500 }}>\r\n                    Price\r\n                  </Label>\r\n                </Col>\r\n                <Col>\r\n                  <input\r\n                    defaultValue={this.props.products.mproduct.price}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref=\"pprice\"\r\n                    style={{ fontSize: 20 }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Col>\r\n                  <Label style={{ fontSize: 17, fontWeight: 500 }}>\r\n                    Categary\r\n                  </Label>\r\n                </Col>\r\n                <Col>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref='pcategary'\r\n                    style={{ fontSize: 20 }}\r\n                    defaultValue={this.props.products.mproduct.categary}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Col>\r\n                  <Label style={{ fontSize: 17, fontWeight: 500 }}>\r\n                    Description\r\n                  </Label>\r\n                </Col>\r\n                <Col>\r\n                  <textarea\r\n                    style={{ fontSize: 20 }}\r\n                    className=\"form-control\"\r\n                    ref='pdescription'\r\n                    defaultValue={this.props.products.mproduct.description}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter style={{ border: \"none\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.props.toggle();\r\n                this.sendData()\r\n              }}\r\n            >\r\n              save\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    products: store.productsReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditModal);\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader as h3, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nclass ReadModal extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.props.readModel} >\r\n          <h4  style={{ fontWeight: 300, textAlign: 'center', marginTop: 25  }}>Product Details</h4>\r\n          <ModalBody>\r\n            <Table borderless>\r\n              <tbody>\r\n                <tr>\r\n                  <th className=\"rModalth\">  Id </th>\r\n                  <td className=\"rModaltd\">\r\n                    \r\n                    {this.props.products.mproduct.id }\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"rModalth\"> Name </th>\r\n                  <td className=\"rModaltd\">\r\n                    \r\n                    {this.props.products.mproduct.name}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"rModalth\"> Price </th>\r\n                  <td className=\"rModaltd\">\r\n                    \r\n                    {this.props.products.mproduct.price + \" Rs\"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"rModalth\"> Categary </th>\r\n                  <td className=\"rModaltd\">\r\n                    \r\n                    {this.props.products.mproduct.categary}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"rModalth\"> Description </th>\r\n                  <td className=\"rModaltd\">\r\n                    \r\n                    {this.props.products.mproduct.description}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"rModalth\">  Added At </th>\r\n                  <td className=\"rModaltd\">\r\n                    \r\n                    {this.props.products.mproduct.time  }\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </ModalBody>\r\n          <ModalFooter style={{ border: \"none\" }}>\r\n            <Button color=\"secondary\" onClick={this.props.toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    products: store.productsReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ReadModal);\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeProductAction, editProductAction } from \"../actions/productsActions\";\r\nimport EditModal from './eModal'\r\nimport ReadModal from './rModal'\r\nimport { FaReadme, FaEdit, FaWindowClose } from 'react-icons/fa';\r\n\r\nclass Content extends Component {\r\n  state = {\r\n    editingModel: false,\r\n    readModel: false\r\n  }\r\n  removeProduct = index => {\r\n    this.props.dispatch(removeProductAction(index));\r\n  };\r\n\r\n  editProductIndex = index => {\r\n    this.props.dispatch(editProductAction(index));\r\n  }\r\n  etoggle() {\r\n    this.setState({\r\n      editingModel: !this.state.editingModel,\r\n\r\n    });\r\n  }\r\n  rtoggle() {\r\n    this.setState({\r\n      readModel: !this.state.readModel,\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <EditModal toggle={this.etoggle.bind(this)} editingModel={this.state.editingModel} />\r\n        <ReadModal toggle={this.rtoggle.bind(this)} readModel={this.state.readModel} />\r\n\r\n        <div className=\"formContainer col-lg-8 col-md-11 \">\r\n          <div className=\" createBtnContainer \">\r\n            <Link to=\"/addproduct\" className=\"createBtn\">\r\n              create Product\r\n              </Link>\r\n          </div>\r\n          <Table responsive style={{ boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)' }}>\r\n            <thead style={{ backgroundColor: \"mediumaquamarine\" }}>\r\n              <tr className=\"tableHeadings\">\r\n                <th />\r\n                <th> Name</th>\r\n                <th> Price</th>\r\n                <th> Categary</th>\r\n                <th> Description </th>\r\n                <th style={{ textAlign: \"center\" }}> Actions </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr className=\"tdTags \" style={{ 'display': this.props.productItems.products.length ? 'none' : '' }}>\r\n                <td colSpan='6' className='red'>\r\n                  there is currently no product in the list\r\n               </td>\r\n              </tr>\r\n              {this.props.productItems.products.map((item, index) => {\r\n                return (\r\n                  <tr key={index} className=\"tdTags\">\r\n                    <th scope=\"row\" />\r\n                    <td> {item.name} </td>\r\n                    <td> {item.price + ' Rs'} </td>\r\n                    <td> {item.categary} </td>\r\n                    <td> {item.description} </td>\r\n\r\n                    <td className=\"btnGroup lgWindow\">\r\n\r\n                      <Button className=\"r-button\" onClick={() => { this.setState({ readModel: true }); this.editProductIndex(index) }}>read one </Button>\r\n                      <Button className='e-button' onClick={() => { this.setState({ editingModel: true }); this.editProductIndex(index) }} >Edit </Button>\r\n                      <Button className='d-button' onClick={() => { this.removeProduct(item) }} > delete </Button>\r\n                    </td>\r\n                    <td className=\"btnGroup xsWindow\">\r\n\r\n                      <Link to='' className=\"r-button\" onClick={() => { this.setState({ readModel: true }); this.editProductIndex(index) }}><FaReadme /></Link>\r\n                      <Link to='' className='e-button' onClick={() => { this.setState({ editingModel: true }); this.editProductIndex(index) }}><FaEdit /> </Link>\r\n                      <Link to='' className='d-button' onClick={() => { this.removeProduct(item); }} > <FaWindowClose /> </Link>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    productItems: store.productsReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Content);\r\n","import React, { Component } from \"react\";\r\nimport { button, Form, FormGroup, Label } from \"reactstrap\";\r\nimport { newProductAction } from \"../actions/productsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\n\r\nclass Product {\r\n  constructor(name, price, categary, description, time, id) {\r\n    this.name = name;\r\n    this.price = price;\r\n    this.categary = categary;\r\n    this.description = description;\r\n    this.time = time;\r\n    this.id = id;\r\n  }\r\n}\r\n\r\nclass New_Product extends Component {\r\n  getProductData = (e) => {\r\n    e.preventDefault();\r\n    \r\n    let name = this.refs.pName.value;\r\n    let price = this.refs.pPrice.value;\r\n    let categary = this.refs.pCategary.value;\r\n    let description = this.refs.pDescription.value;\r\n    let now = new Date();\r\n    let time = now.getDate() + '-' + now.getMonth() + '-' + now.getFullYear() + '  ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\r\n    let id = Math.floor(Math.random() * 100000000);\r\n\r\n    let nameRegex = new RegExp(`[a-zA-Z\\-'\\s]+`);\r\n    let priceRegex = new RegExp(`^[0-9]`);\r\n    let catRegex = new RegExp(`[a-zA-Z\\-'\\s]+`);\r\n    let desRegex = new RegExp(`^(.|\\s)*[a-zA-Z]+(.|\\s)*$`);\r\n\r\n\r\n    if (\r\n      nameRegex.test(name) &&\r\n      priceRegex.test(price) &&\r\n      catRegex.test(categary) &&\r\n      desRegex.test(description)\r\n    ) {\r\n    let newProduct = new Product(name, price, categary, description, time, id);\r\n    this.props.dispatch(newProductAction(newProduct));\r\n    alert('your product has been successfully added.')\r\n    this.clearInputs(); }\r\n    else {\r\n      alert('invalid inputs ')\r\n    }\r\n\r\n  }\r\n\r\n  clearInputs = () => {\r\n    this.refs.pName.value = '';\r\n    this.refs.pPrice.value = '';\r\n    this.refs.pCategary.value = '';\r\n    this.refs.pDescription.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"backBtnContainer\">\r\n          <Link to=\"/productShop\" className=\"createBtn\">\r\n            <FaArrowLeft /> Home\r\n          </Link>\r\n        </div>\r\n        <div className=\"formOuterContainer\">\r\n          <div >\r\n            <Form className=\" formInnerContainer\">\r\n              <h4 className='formTitle'>enter product details here </h4>\r\n              <FormGroup>\r\n                <Label for=\"name\" className=\"labelStyle  \">\r\n                  Name <span> * </span>\r\n                </Label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  ref=\"pName\"\r\n                  style={{ fontSize: 16, width: \"85%\", margin: \"auto\", }}\r\n                  autoFocus\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"price\" className=\"labelStyle  \">\r\n                  Price <span> * </span>\r\n                </Label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  className=\"form-control\"\r\n                  id=\"price\"\r\n                  ref=\"pPrice\"\r\n                  style={{ fontSize: 16, width: \"85%\", margin: \"auto\" }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"categary\" className=\"labelStyle  \">\r\n                  Categary <span> * </span>\r\n                </Label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"categary\"\r\n                  className=\"form-control\"\r\n                  id=\"categary\"\r\n                  ref=\"pCategary\"\r\n                  style={{ fontSize: 16, width: \"85%\", margin: \"auto\" }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"description\" className=\"labelStyle  \">\r\n                  Descriptoin <span> * </span>\r\n                </Label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  ref=\"pDescription\"\r\n                  style={{ fontSize: 16, width: \"85%\", margin: \"auto\" }}\r\n                />\r\n              </FormGroup>\r\n              <div className='addproduct'>\r\n\r\n                <button  onClick={this.getProductData.bind(this)} >\r\n                  Add Product\r\n              </button>\r\n              </div>\r\n            </Form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(New_Product);\r\n","\r\nlet data = {\r\n  mproduct: {},\r\n  products: [\r\n    \r\n  ]\r\n};\r\n\r\nconst productsReducer = (state = data, action) => {\r\n  let newState = { ...state };\r\n  switch (action.type) {\r\n    case \"ADD_PRODUCT\":\r\n      newState.products.push(action.payload);\r\n      console.log(newState.products);\r\n      return newState;\r\n\r\n    case \"REMOVE_PRODUCT\":\r\n      newState.products = newState.products.filter((product, index) => {\r\n        return product !== action.payload;\r\n      });\r\n      return newState;\r\n\r\n    case \"EDIT_PRODUCT\":\r\n      newState.mproduct = newState.products[action.payload];\r\n      return newState;\r\n\r\n    case \"EDITED_PRODUCT\":\r\n      newState.products = newState.products.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          item = action.payload;\r\n        }\r\n        return item;\r\n      });\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;\r\n","import { createStore, combineReducers } from 'redux'\r\nimport productsReducer from './reducers/products_reducers'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nlet allReducers = combineReducers({ productsReducer })\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, allReducers)\r\n\r\nlet store = createStore(persistedReducer)\r\nlet persistor = persistStore(store)\r\n\r\n\r\nexport default { store, persistor }","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport New_Product from \"./components/New_Product\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport config from \"./redux\";\n\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={config.store}>\n        <PersistGate loading={null} persistor={config.persistor}>\n          <BrowserRouter>\n            <div>\n              <Header />\n\n              <Route path=\"/productShop/addproduct\" component={New_Product} />\n              <Route exact path=\"/productShop\" component={Content} />\n            </div>\n          </BrowserRouter>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}